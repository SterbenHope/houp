# Generated by Django 5.0.2 on 2025-08-19 08:13

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('games', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('promo_type', models.CharField(choices=[('WELCOME', 'Welcome Bonus'), ('DEPOSIT', 'Deposit Bonus'), ('RELOAD', 'Reload Bonus'), ('FREE_SPINS', 'Free Spins'), ('CASHBACK', 'Cashback'), ('TOURNAMENT', 'Tournament Bonus'), ('VIP', 'VIP Bonus'), ('SEASONAL', 'Seasonal Bonus')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('EXPIRED', 'Expired'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('bonus_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('max_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('min_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('discount_type', models.CharField(choices=[('FIXED', 'Fixed'), ('PERCENTAGE', 'Percentage')], default='FIXED', max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('free_spins', models.PositiveIntegerField(default=0)),
                ('max_uses', models.PositiveIntegerField(default=1)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1)),
                ('current_uses', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_countries', models.JSONField(blank=True, default=list)),
                ('target_user_groups', models.JSONField(blank=True, default=list)),
                ('min_user_level', models.PositiveIntegerField(default=0)),
                ('wagering_multiplier', models.DecimalField(decimal_places=2, default=0, help_text='Amount user must wager to withdraw bonus (e.g., 20x means wager 20x bonus amount)', max_digits=10)),
                ('max_wagering_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('terms_conditions', models.TextField(blank=True)),
                ('is_first_deposit_only', models.BooleanField(default=False)),
                ('is_new_users_only', models.BooleanField(default=False)),
                ('free_spins_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promo_codes', to='games.game')),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Codes',
                'db_table': 'promo_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('target_audience', models.TextField(blank=True)),
                ('budget', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('spent_budget', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_redemptions', models.PositiveIntegerField(default=0)),
                ('total_bonus_awarded', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('promo_codes', models.ManyToManyField(blank=True, related_name='campaigns', to='promo.promocode')),
            ],
            options={
                'verbose_name': 'Promo Campaign',
                'verbose_name_plural': 'Promo Campaigns',
                'db_table': 'promo_campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoRedemption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('free_spins_awarded', models.PositiveIntegerField(default=0)),
                ('free_spins_used', models.PositiveIntegerField(default=0)),
                ('wagering_requirement', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('wagering_completed', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('wagering_progress', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of wagering requirement completed', max_digits=5)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('promo_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='promo.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_redemptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Promo Code Redemption',
                'verbose_name_plural': 'Promo Code Redemptions',
                'db_table': 'promo_redemptions',
                'ordering': ['-redeemed_at'],
            },
        ),
        migrations.CreateModel(
            name='FreeSpinUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('bet_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('win_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='free_spin_usage', to='games.game')),
                ('game_round', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='games.gameround')),
                ('redemption', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='free_spin_usage', to='promo.promoredemption')),
            ],
            options={
                'verbose_name': 'Free Spin Usage',
                'verbose_name_plural': 'Free Spin Usage',
                'db_table': 'free_spin_usage',
                'ordering': ['-used_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoReward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reward_type', models.CharField(choices=[('BONUS', 'Bonus'), ('FREE_SPINS', 'Free Spins'), ('CASHBACK', 'Cashback'), ('OTHER', 'Other')], max_length=20)),
                ('reward_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('reward_description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='promo.promocampaign')),
                ('promo_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='promo.promocode')),
            ],
            options={
                'verbose_name': 'Promo Reward',
                'verbose_name_plural': 'Promo Rewards',
                'db_table': 'promo_rewards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='promocode',
            index=models.Index(fields=['code', 'status'], name='promo_codes_code_a994f3_idx'),
        ),
        migrations.AddIndex(
            model_name='promocode',
            index=models.Index(fields=['promo_type', 'status'], name='promo_codes_promo_t_6b9748_idx'),
        ),
        migrations.AddIndex(
            model_name='promocode',
            index=models.Index(fields=['valid_from', 'valid_until'], name='promo_codes_valid_f_9f992f_idx'),
        ),
        migrations.AddIndex(
            model_name='promocode',
            index=models.Index(fields=['status', 'valid_until'], name='promo_codes_status_f2e58c_idx'),
        ),
        migrations.AddIndex(
            model_name='promoredemption',
            index=models.Index(fields=['user', 'status'], name='promo_redem_user_id_510203_idx'),
        ),
        migrations.AddIndex(
            model_name='promoredemption',
            index=models.Index(fields=['promo_code', 'status'], name='promo_redem_promo_c_63855e_idx'),
        ),
        migrations.AddIndex(
            model_name='promoredemption',
            index=models.Index(fields=['status', 'expires_at'], name='promo_redem_status_d8b08a_idx'),
        ),
        migrations.AddIndex(
            model_name='promoredemption',
            index=models.Index(fields=['redeemed_at', 'status'], name='promo_redem_redeeme_13af8a_idx'),
        ),
    ]
