# Generated by Django 5.0.2 on 2025-08-22 00:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('promo', '0002_promorule'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PromoManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_username', models.CharField(blank=True, help_text='Telegram username', max_length=100)),
                ('telegram_chat_id', models.CharField(blank=True, help_text='Telegram chat ID', max_length=100)),
                ('experience_years', models.PositiveIntegerField(default=0, help_text='Years of experience')),
                ('experience_description', models.TextField(blank=True, help_text='Description of experience')),
                ('skills', models.JSONField(blank=True, default=list, help_text='List of skills')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('total_promos_created', models.PositiveIntegerField(default=0)),
                ('total_users_referred', models.PositiveIntegerField(default=0)),
                ('total_revenue_generated', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, help_text='Commission rate in percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_managers', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='promo_manager_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Promo Manager',
                'verbose_name_plural': 'Promo Managers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCodeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(help_text='Requested promo code', max_length=50)),
                ('name', models.CharField(help_text='Promo name', max_length=100)),
                ('description', models.TextField(help_text='Promo description')),
                ('discount_type', models.CharField(choices=[('FIXED', 'Fixed'), ('PERCENTAGE', 'Percentage')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1)),
                ('total_max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('valid_days', models.PositiveIntegerField(default=30, help_text='Number of days promo will be valid')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Admin notes about the request')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_promo_requests', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_requests', to='promo.promomanager')),
            ],
            options={
                'verbose_name': 'Promo Code Request',
                'verbose_name_plural': 'Promo Code Requests',
                'ordering': ['-created_at'],
            },
        ),
    ]
