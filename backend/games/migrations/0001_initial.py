# Generated by Django 5.0.2 on 2025-08-19 08:13

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=500)),
                ('game_type', models.CharField(choices=[('SLOT', 'Slot Machine'), ('TABLE', 'Table Game'), ('LIVE', 'Live Casino'), ('VIRTUAL', 'Virtual Game'), ('SCRATCH', 'Scratch Card'), ('BINGO', 'Bingo'), ('KENO', 'Keno'), ('LOTTERY', 'Lottery'), ('SPORTS', 'Sports Betting'), ('OTHER', 'Other')], max_length=20)),
                ('provider', models.CharField(choices=[('NETENT', 'NetEnt'), ('MICROGAMING', 'Microgaming'), ('PLAYTECH', 'Playtech'), ('EVOLUTION', 'Evolution Gaming'), ('PRAGMATIC', 'Pragmatic Play'), ('PLAYSTAR', 'PlayStar'), ('CUSTOM', 'Custom')], max_length=20)),
                ('min_bet', models.DecimalField(decimal_places=2, default=0.01, max_digits=15)),
                ('max_bet', models.DecimalField(decimal_places=2, default=1000.0, max_digits=15)),
                ('rtp_percentage', models.DecimalField(decimal_places=2, default=96.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('volatility', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('VERY_HIGH', 'Very High')], default='MEDIUM', max_length=20)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='game_thumbnails/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='game_banners/')),
                ('demo_url', models.URLField(blank=True)),
                ('game_url', models.URLField(blank=True)),
                ('has_demo', models.BooleanField(default=True)),
                ('has_free_spins', models.BooleanField(default=False)),
                ('has_bonus_rounds', models.BooleanField(default=False)),
                ('has_progressive_jackpot', models.BooleanField(default=False)),
                ('is_mobile_compatible', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=False)),
                ('is_hot', models.BooleanField(default=False)),
                ('total_plays', models.PositiveIntegerField(default=0)),
                ('total_wagered', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_won', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('average_play_time', models.PositiveIntegerField(default=0, help_text='Average play time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'db_table': 'games',
                'ordering': ['-is_featured', '-is_new', '-total_plays', 'title'],
            },
        ),
        migrations.CreateModel(
            name='GameCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='game_categories/')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Game Category',
                'verbose_name_plural': 'Game Categories',
                'db_table': 'game_categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GameAchievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('achievement_type', models.CharField(choices=[('FIRST_WIN', 'First Win'), ('BIG_WIN', 'Big Win')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('neoncoins_reward', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='games.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Achievement',
                'verbose_name_plural': 'Game Achievements',
                'db_table': 'game_achievements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='game',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='games.gamecategory'),
        ),
        migrations.CreateModel(
            name='GameRound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('round_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('PAUSED', 'Paused')], default='ACTIVE', max_length=20)),
                ('bet_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('win_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_wagered', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('game_state', models.JSONField(blank=True, default=dict)),
                ('result_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Duration in seconds')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='games.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_rounds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Round',
                'verbose_name_plural': 'Game Rounds',
                'db_table': 'game_rounds',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_rounds', models.PositiveIntegerField(default=0)),
                ('total_wagered', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_won', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_result', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('session_data', models.JSONField(blank=True, default=dict)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='games.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Session',
                'verbose_name_plural': 'Game Sessions',
                'db_table': 'game_sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_type', 'is_active'], name='games_game_ty_014378_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['category', 'is_active'], name='games_categor_fa1bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['provider', 'is_active'], name='games_provide_9cf597_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['is_featured', 'is_active'], name='games_is_feat_ac9220_idx'),
        ),
        migrations.AddIndex(
            model_name='gameround',
            index=models.Index(fields=['user', 'status'], name='game_rounds_user_id_e6e435_idx'),
        ),
        migrations.AddIndex(
            model_name='gameround',
            index=models.Index(fields=['game', 'status'], name='game_rounds_game_id_cdc6a2_idx'),
        ),
        migrations.AddIndex(
            model_name='gameround',
            index=models.Index(fields=['started_at', 'status'], name='game_rounds_started_7afb54_idx'),
        ),
    ]
